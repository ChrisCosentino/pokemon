{"version":3,"sources":["context/pokemon/pokemonContext.js","context/pokemon/pokemonReducer.js","context/types.js","context/pokemon/PokemonState.js","components/layout/SearchResults.js","components/pages/Home.js","components/layout/DetailRow.js","components/pages/PokeDetails.js","App.js","index.js"],"names":["pokemonContext","createContext","state","action","type","pokemonList","payload","error","selectedPokemon","PokemonState","props","useReducer","PokemonReducer","dispatch","searchPokemon","name","a","axios","get","res","data","cards","length","Provider","value","setSelectedPokemon","pokemon","children","SearchResults","useContext","PokemonContext","to","id","className","map","key","onClick","handleSelectPokemon","src","imageUrlHiRes","alt","Home","useState","search","setSearch","onSubmit","e","preventDefault","placeholder","onChange","target","DetailRow","title","types","val","index","PokeDetails","rarity","series","set","evolvesFrom","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30cbc065.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst pokemonContext = createContext();\n\nexport default pokemonContext;\n","import { SEARCH_POKEMON, SET_ERROR, SET_SELECTED_POKEMON } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_POKEMON:\n      return {\n        ...state,\n        pokemonList: action.payload,\n        error: '',\n      };\n    case SET_SELECTED_POKEMON:\n      return {\n        ...state,\n        selectedPokemon: action.payload,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        pokemonList: [],\n      };\n    default:\n      return state;\n  }\n};\n","export const SEARCH_POKEMON = 'SEARCH_POKEMON';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_SELECTED_POKEMON = 'SET_SELECTED_POKEMON';\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport PokemonContext from './pokemonContext';\nimport PokemonReducer from './pokemonReducer';\n\nimport { SEARCH_POKEMON, SET_SELECTED_POKEMON, SET_ERROR } from '../types';\n\nconst PokemonState = (props) => {\n  const initialState = {\n    selectedPokemon: null,\n    pokemonList: [],\n    error: '',\n  };\n\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const searchPokemon = async (name) => {\n    const res = await axios.get(\n      `https://api.pokemontcg.io/v1/cards?name=${name}`\n    );\n\n    if (res.data.cards.length < 1) {\n      dispatch({\n        type: SET_ERROR,\n        payload: 'The Pokemon doesnt exist!',\n      });\n    } else {\n      dispatch({\n        type: SEARCH_POKEMON,\n        payload: res.data.cards,\n      });\n    }\n  };\n\n  const setSelectedPokemon = (pokemon) => {\n    dispatch({\n      type: SET_SELECTED_POKEMON,\n      payload: pokemon,\n    });\n  };\n\n  return (\n    <PokemonContext.Provider\n      value={{\n        selectedPokemon: state.selectedPokemon,\n        pokemonList: state.pokemonList,\n        error: state.error,\n        searchPokemon,\n        setSelectedPokemon,\n      }}>\n      {props.children}\n    </PokemonContext.Provider>\n  );\n};\n\nexport default PokemonState;\n","import React, { Fragment, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport PokemonContext from '../../context/pokemon/pokemonContext';\n\nconst SearchResults = () => {\n  const pokemonContext = useContext(PokemonContext);\n  const {\n    pokemonList,\n    setSelectedPokemon,\n    selectedPokemon,\n    error,\n  } = pokemonContext;\n\n  const handleSelectPokemon = (pokemon) => {\n    setSelectedPokemon(pokemon);\n  };\n\n  if (selectedPokemon !== null) {\n    return <Redirect to={`/p/${selectedPokemon.id}`} />;\n  }\n\n  return (\n    <Fragment>\n      {pokemonList.length ? (\n        <div className='search-results'>\n          {pokemonList.map((pokemon) => (\n            <img\n              key={pokemon.id}\n              onClick={() => handleSelectPokemon(pokemon)}\n              className='card-img-preview'\n              src={pokemon.imageUrlHiRes}\n              alt={pokemon.name}\n            />\n          ))}\n        </div>\n      ) : (\n        <Fragment>\n          {!error ? (\n            <div className='results-empty'>Search for a Pokemon!</div>\n          ) : (\n            <div className='error-msg'>{error}</div>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState, useContext } from 'react';\n\nimport PokemonContext from '../../context/pokemon/pokemonContext';\n\nimport SearchResults from '../layout/SearchResults';\n\nconst Home = () => {\n  const pokemonContext = useContext(PokemonContext);\n  const { searchPokemon } = pokemonContext;\n\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    searchPokemon(search);\n  };\n\n  return (\n    <div className='container'>\n      <form onSubmit={handleSubmit}>\n        <h1 className='title'>Pokemon Finder</h1>\n\n        <input\n          placeholder='Search'\n          className='search-input'\n          type='text'\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n        <button type='submit' className='submit-btn'>\n          Submit\n        </button>\n      </form>\n\n      <SearchResults />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst DetailRow = ({ title, types, val }) => {\n  if (types) {\n    return (\n      <div>\n        <div className='row-title'>{title}:</div>\n        {types.map((type, index) => (\n          <div key={index}>{type}</div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <span className='row-title'>{title}:</span>\n      <span>{val}</span>\n    </div>\n  );\n};\n\nexport default DetailRow;\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport PokemonContext from '../../context/pokemon/pokemonContext';\n\nimport DetailRow from '../layout/DetailRow';\n\nconst PokeDetails = () => {\n  const pokemonContext = useContext(PokemonContext);\n  const { selectedPokemon, setSelectedPokemon } = pokemonContext;\n\n  const handleBackBtn = () => {\n    setSelectedPokemon(null);\n  };\n\n  if (selectedPokemon === null) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div className='poke-details'>\n      <div className='card'>\n        <div className='details-name'>{selectedPokemon.name}</div>\n        <img\n          className='details-img'\n          src={selectedPokemon.imageUrlHiRes}\n          alt={selectedPokemon.name}\n        />\n      </div>\n\n      <div className='details-info'>\n        <h1 className='detail'>Details</h1>\n        <div className='detail-table'>\n          <DetailRow title='Type' types={selectedPokemon.types} />\n          <DetailRow title='Rarity' val={selectedPokemon.rarity} />\n          <DetailRow title='Series' val={selectedPokemon.series} />\n          <DetailRow title='Set' val={selectedPokemon.set} />\n          {selectedPokemon.evolvesFrom && (\n            <DetailRow title='Evolves from' val={selectedPokemon.evolvesFrom} />\n          )}\n\n          <button className='back-btn' onClick={handleBackBtn}>\n            Back\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokeDetails;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport PokemonState from './context/pokemon/PokemonState';\n\nimport Home from './components/pages/Home';\nimport PokeDetails from './components/pages/PokeDetails';\n\nimport './styles.css';\n\nconst App = () => {\n  return (\n    <PokemonState>\n      <Router>\n        <Switch>\n          <Route path='/p/:id' component={PokeDetails} />\n          <Route exact path='/' component={Home} />\n        </Switch>\n      </Router>\n    </PokemonState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}